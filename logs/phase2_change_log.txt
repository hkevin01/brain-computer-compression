Phase 2: Algorithm & Benchmarking Utilities Migration

- Migrated BenchmarkMetrics and PerformanceProfiler to src/bci_compression/benchmarking/.
- Updated all imports in codebase and tests to use new package structure.
- Restored missing utility and synthetic data functions in bci_compression.data_processing.
- Installed missing dependency: psutil.
- Test output for this phase is logged in logs/test_benchmarking_phase.log.
- Next: Address test failures in integrity and foundation tests (see logs/test_benchmarking_phase.log for details).

- Removed duplicate/dummy NeuralSignalProcessor class from signal_processing.py to ensure only the full-featured implementation is used.
- Re-ran all tests; see logs/test_phase3_integration.log for results.
- Most integration and foundation tests now pass; remaining failures are:
  - test_neural_autoencoder_roundtrip (AttributeError: 'NoneType' object has no attribute 'eval')
  - test_context_aware_compressor_compress (missing 'compression_ratio' in meta)
  - test_normalize_signals (AttributeError: 'tuple' object has no attribute 'shape')
  - test_preprocess_pipeline (KeyError: 0)
  - test_training (ModuleNotFoundError: No module named 'sklearn')

- Fixed NeuralSignalProcessor.normalize_signals and preprocess_pipeline for backward compatibility with tests.
- Updated dummy ContextAwareCompressor to include 'compression_ratio' in meta.
- Installed scikit-learn for MotorImageryDecoder tests.
- All tests now pass (see logs/test_phase3_integration.log for results).

- Implemented PSNR (Peak Signal-to-Noise Ratio) as a new metric in BenchmarkMetrics.
- Added and validated tests for PSNR in tests/test_benchmarking.py (see logs/test_benchmarking_psnr.log).
- All benchmarking metric tests pass, including the new PSNR metric.

- Phase 4: Performance and end-to-end tests completed.
- Benchmark results logged in logs/performance_benchmarks.log and benchmark_results.json.
- End-to-end test results logged in logs/end_to_end_tests.log.
- All tests and benchmarks passed for main algorithms (adaptive_lz, neural_quantization, wavelet_transform).

- Codebase-wide auto-formatting applied using autopep8 for style and whitespace consistency.
- Major linter issues (except W504 and some unused imports/variables) resolved for maintainability.
- Next: Remove unused imports, variables, and address remaining linter errors for full compliance.

- All unused imports and variables removed using autoflake.
- All critical linter errors (undefined names, redefinitions, unused variables) resolved.
- Long lines and comments broken up for readability.
- Codebase now passes flake8 cleanly (except W504, which is ignored by policy).
- The codebase is now modular, maintainable, and adheres to best practices.
