name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install CPU-only dependencies first
        pip install numpy scipy pandas h5py pytest coverage flake8
        pip install -e .[dev,cpu]

        # Install GPU dependencies if CUDA is available
        if [ "$RUNNER_OS" = "Linux" ] && [ -d "/usr/local/cuda" ]; then
          pip install -r requirements.txt  # Full install with GPU support
        else
          # Install CPU-only subset of requirements
          grep -v "cuda\|cudf\|cusignal\|rmm" requirements.txt | pip install -r /dev/stdin
        fi

    - name: Lint with flake8
      run: |
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        coverage run -m pytest tests/ -v
        coverage report
        coverage xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Build Docker image
      run: |
        docker build -t bci-compression:latest .
        docker run --rm bci-compression:latest python -c "import bci_compression; print('Build successful')"
